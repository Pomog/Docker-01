version: "3.9"

services:
    # 1) INVENTORY DATABASE
    inventory-db:
        build:
            context: ./inventory-database
            dockerfile: Dockerfile
        container_name: inventory-db
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - "5433:5432"
        volumes:
            - inventory-db-volume:/var/lib/postgresql/data
        networks:
            - app-network
        restart: unless-stopped

    # 2) BILLING DATABASE
    billing-db:
        build:
            context: ./billing-database
            dockerfile: Dockerfile
        container_name: billing-db
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - "5434:5432"
        volumes:
            - billing-db-volume:/var/lib/postgresql/data
        networks:
            - app-network
        restart: unless-stopped

    # 3) RABBITMQ QUEUE
    rabbit-queue:
        build:
            context: ./rabbitmq
            dockerfile: Dockerfile
        container_name: rabbit-queue
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        ports:
            - "5672:5672"
        networks:
            - app-network
        restart: unless-stopped

    # 4) INVENTORY-APP
    inventory-app:
        build:
            context: ./inventory-app
            dockerfile: Dockerfile
        container_name: inventory-app
        depends_on:
            - inventory-db
        ports:
            - "8081:8080"
        networks:
            - app-network
        restart: unless-stopped

    # 5) BILLING-APP
    billing-app:
        build:
            context: ./billing-app
            dockerfile: Dockerfile
        container_name: billing-app
        depends_on:
            - billing-db
            - rabbit-queue
        ports:
            - "8082:8080"
        networks:
            - app-network
        restart: unless-stopped

    # 6) API-GATEWAY
    api-gateway-app:
        build:
            context: ./api-gateway
            dockerfile: Dockerfile
        container_name: api-gateway-app
        ports:
            - "3000:3000"
        volumes:
            - api-gateway-volume:/var/logs/api-gateway
        networks:
            - app-network
        restart: unless-stopped

volumes:
    inventory-db-volume:
    billing-db-volume:
    api-gateway-volume:


networks:
    app-network:
        driver: bridge
