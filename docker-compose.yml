version: "3.9"

services:
    # 1) INVENTORY DATABASE
    inventory-db:
        build:
            context: ./inventory-database
            dockerfile: Dockerfile
        container_name: inventory-db
        environment:
            POSTGRES_USER: "${POSTGRES_USER}"
            POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
            # Optional if you want a custom DB name:
            # POSTGRES_DB: "inventory_db"
        ports:
            - "5433:5432"
        volumes:
            - inventory-db-volume:/var/lib/postgresql/data
        networks:
            - app-network
        restart: unless-stopped

    # 2) BILLING DATABASE
    billing-db:
        build:
            context: ./billing-database
            dockerfile: Dockerfile
        container_name: billing-db
        environment:
            POSTGRES_USER: "${POSTGRES_USER}"
            POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
            POSTGRES_DB: "billing_db"
        ports:
            - "5434:5432"
        volumes:
            - billing-db-volume:/var/lib/postgresql/data
        networks:
            - app-network
        restart: unless-stopped

    # 3) RABBITMQ QUEUE
    rabbit-queue:
        build:
            context: ./rabbitmq
            dockerfile: Dockerfile
        container_name: rabbit-queue
        environment:
            RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
            RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
        ports:
            - "5672:5672"
        networks:
            - app-network
        restart: unless-stopped

    # 4) INVENTORY-APP
    inventory-app:
        build:
            context: ./inventory-app
            dockerfile: Dockerfile
        container_name: inventory-app
        depends_on:
            - inventory-db
        ports:
            - "8081:8080"
        environment:
            APP_PORT: "8080"
            INVENTORY_DB_USER: "inventory_admin"
            INVENTORY_DB_PASSWORD: "someSecurePass"
            INVENTORY_DB_HOST: "inventory-db"   # The container name for the DB
            INVENTORY_DB_PORT: "5432"
            INVENTORY_DB_NAME: "inventory_db"   # optional, or match your DB
        networks:
            - app-network
        restart: unless-stopped

    # 5) BILLING-APP
    billing-app:
        build:
            context: ./billing-app
            dockerfile: Dockerfile
        container_name: billing-app
        depends_on:
            - billing-db
            - rabbit-queue
        ports:
            - "8082:8080"   # if it even needs an HTTP port
        environment:
            APP_PORT: "8080"
            DB_HOST: "billing-db"
            DB_PORT: "5432"
            DB_USER: "inventory_admin"    # or separate user if you prefer
            DB_PASS: "someSecurePass"
            DB_NAME: "billing_db"
            RABBITMQ_HOST: "rabbit-queue"
            RABBITMQ_PORT: "5672"
            RABBITMQ_USER: "rmqadmin"
            RABBITMQ_PASSWORD: "anotherSecurePass"
            RABBITMQ_QUEUE: "billing_queue"
        networks:
            - app-network
        restart: unless-stopped


    # 6) API-GATEWAY
    api-gateway-app:
        build:
            context: ./api-gateway
            dockerfile: Dockerfile
        container_name: api-gateway-app
        ports:
            - "3000:3000"
        environment:
            APP_PORT: "3000"
            INVENTORY_APP_HOST: "inventory-app"  # so the proxy can route to 'inventory-app'
            INVENTORY_APP_PORT: "8080"
            RABBITMQ_HOST: "rabbit-queue"
            RABBITMQ_PORT: "5672"
            RABBITMQ_USER: "rmqadmin"
            RABBITMQ_PASSWORD: "anotherSecurePass"
            RABBITMQ_QUEUE: "billing_queue"
        networks:
            - app-network
        restart: unless-stopped


volumes:
    inventory-db-volume:
    billing-db-volume:
    api-gateway-volume:


networks:
    app-network:
        driver: bridge
